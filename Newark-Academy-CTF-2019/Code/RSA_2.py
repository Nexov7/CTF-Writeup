from Cryptodome.PublicKey import RSA
from Cryptodome.Cipher import PKCS1_OAEP
from gmpy2 import *

public_key = RSA.importKey(open('../Files/oligarchy.pem', 'r').read())
n = public_key.n
e = public_key.e
r = 21700996784810065805847020455080940987640304282783092123992896363328128691169420271855815648912121417792054646557156071514079520782530801688062034321252682229729442734741486715339008457753023855600772948737800521010217600436912058582658334252483984244806083617513596479033871117464319239681526924092910597300
c = 85407181759755287105309527383534372436668736072315927293076398182206068631971587183149437554341349819060482477969350837066653250734556920049021810122548703168301872412719117857995283679569989680329696657609285728934732302846152702363240223251805773071022405764521081142920227557091217872210813095318042763847

k = 0
while True:
    k += 1
    phi = r*k
    pq = n + 1 - phi
    delta = pq*pq - 4*n
    p = (pq + isqrt(delta))/2
    q = (pq - isqrt(delta))/2
    if p*q == n:
        break

d = long(invert(e, phi))

private_key = RSA.construct([n,e,d])
ciphertext = hex(c)[2:-1].decode('hex')
cipher = PKCS1_OAEP.new(private_key)
message = cipher.decrypt(ciphertext)
print(message)